{
    "swagger": "2.0",
    "info": {
        "description": "contact service on clean architecture",
        "title": "contact service on clean architecture",
        "contact": {
            "name": "API Support",
            "email": "evgeniydammer@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/contacts/": {
            "get": {
                "description": "Get contact list method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Get contact list method.",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Item count",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "item offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "name",
                        "description": "Field sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact list",
                        "schema": {
                            "$ref": "#/definitions/contact.ListContact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create contact method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Create contact method.",
                "parameters": [
                    {
                        "description": "Contact data",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contact.ShortContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "201": {
                        "description": "Contact structure",
                        "schema": {
                            "$ref": "#/definitions/contact.ResponseContact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contacts/{id}": {
            "get": {
                "description": "Get contact by ID method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Get contact by ID method.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact structure",
                        "schema": {
                            "$ref": "#/definitions/contact.ResponseContact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update contact method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Update contact method.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Contact data",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contact.ShortContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact structure",
                        "schema": {
                            "$ref": "#/definitions/contact.ResponseContact"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete contact method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Delete contact method.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/": {
            "get": {
                "description": "Get group list method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Get group list method.",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Item count",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Item offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "name",
                        "description": "Field sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/group.ListGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create group method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Create group method.",
                "parameters": [
                    {
                        "description": "Group data",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group.ShortGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/group.ResponseGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "description": "Get group by ID method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Get group by ID method.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/group.ResponseGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update group method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Update group method.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group data",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/group.ShortGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/group.ResponseGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete group method.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Delete group method.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/{id}/contacts/": {
            "post": {
                "security": [
                    {
                        "Cookies": []
                    }
                ],
                "description": "Create contact and add it into group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Create contact and add it into group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Contact data",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contact.ShortContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/groups/{id}/contacts/{contactId}": {
            "post": {
                "description": "Add contact into group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Add contact into group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove contact from group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Remove contact from group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contact ID",
                        "name": "contactId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "404 Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contact.ListContact": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Limit of contacts in request",
                    "type": "integer",
                    "default": 10,
                    "minimum": 0,
                    "example": 10
                },
                "list": {
                    "description": "List of contacts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contact.ResponseContact"
                    }
                },
                "offset": {
                    "description": "Offset by contacts",
                    "type": "integer",
                    "default": 0,
                    "minimum": 0,
                    "example": 20
                },
                "total": {
                    "description": "Total contacts in system",
                    "type": "integer",
                    "default": 0,
                    "minimum": 0,
                    "example": 10
                }
            }
        },
        "contact.ResponseContact": {
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "modifiedAt",
                "phoneNumber"
            ],
            "properties": {
                "age": {
                    "description": "Age",
                    "type": "integer",
                    "default": 0,
                    "maximum": 200,
                    "minimum": 0,
                    "example": 42
                },
                "createdAt": {
                    "description": "Create date",
                    "type": "string"
                },
                "email": {
                    "description": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 250,
                    "example": "example@gmail.com"
                },
                "gender": {
                    "description": "Gender",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ],
                    "example": 1
                },
                "id": {
                    "description": "Contact ID",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "modifiedAt": {
                    "description": "Update date",
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "maxLength": 50,
                    "example": "Иван"
                },
                "patronymic": {
                    "description": "Patronymic",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Иванович"
                },
                "phoneNumber": {
                    "description": "Phone",
                    "type": "string",
                    "maxLength": 50,
                    "example": "78002002020"
                },
                "surname": {
                    "description": "Surname",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Иванов"
                }
            }
        },
        "contact.ShortContact": {
            "type": "object",
            "required": [
                "phoneNumber"
            ],
            "properties": {
                "age": {
                    "description": "Age",
                    "type": "integer",
                    "default": 0,
                    "maximum": 200,
                    "minimum": 0,
                    "example": 42
                },
                "email": {
                    "description": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 250,
                    "example": "example@gmail.com"
                },
                "gender": {
                    "description": "Gender",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ],
                    "example": 1
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "maxLength": 50,
                    "example": "Иван"
                },
                "patronymic": {
                    "description": "Patronymic",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Иванович"
                },
                "phoneNumber": {
                    "description": "Phone",
                    "type": "string",
                    "maxLength": 50,
                    "example": "78002002020"
                },
                "surname": {
                    "description": "Surname",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Иванов"
                }
            }
        },
        "group.ListGroup": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Limit of groups in request",
                    "type": "integer",
                    "default": 10,
                    "minimum": 0,
                    "example": 10
                },
                "list": {
                    "description": "List of groups",
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/group.ResponseGroup"
                    }
                },
                "offset": {
                    "description": "Offset by groups",
                    "type": "integer",
                    "default": 0,
                    "minimum": 0,
                    "example": 20
                },
                "total": {
                    "description": "Total groups in system",
                    "type": "integer",
                    "default": 0,
                    "minimum": 0,
                    "example": 10
                }
            }
        },
        "group.ResponseGroup": {
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "modifiedAt",
                "name"
            ],
            "properties": {
                "contactsAmount": {
                    "description": "Contacts count in group",
                    "type": "integer",
                    "default": 10,
                    "minimum": 0
                },
                "createdAt": {
                    "description": "Create date",
                    "type": "string"
                },
                "description": {
                    "description": "Group description",
                    "type": "string",
                    "maxLength": 1000,
                    "example": "Описание группы"
                },
                "id": {
                    "description": "Group ID",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "modifiedAt": {
                    "description": "Update date",
                    "type": "string"
                },
                "name": {
                    "description": "Group name",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Название группы"
                }
            }
        },
        "group.ShortGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Group description",
                    "type": "string",
                    "maxLength": 1000,
                    "example": "Описание группы"
                },
                "name": {
                    "description": "Group name",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Название группы"
                }
            }
        },
        "http.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "info": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}